*&---------------------------------------------------------------------*
*& Report YTEST_MAIL
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ytest_mail.

CONSTANTS: lc_template  TYPE smtg_tmpl_id  VALUE 'YMAIL01'.

DATA: ls_itcpo           TYPE itcpo,
      lv_subject_char50  TYPE so_obj_des,
      lv_subject_char255 TYPE smtg_tmpl_subject,
      lo_sender          TYPE REF TO if_sender_bcs,
      lt_body            TYPE soli_tab,
      lv_notif_template  TYPE string,
      lo_document        TYPE REF TO cl_document_bcs.

START-OF-SELECTION.

  DATA(lo_send_request) = cl_bcs=>create_persistent( ).
*Read email template in HTML or Text.
  DATA(lo_email_api) = cl_smtg_email_api=>get_instance( iv_template_id = lc_template ).
  BREAK-POINT.
  lo_email_api->get_detail( RECEIVING rs_email_template = DATA(ls_email_templ) ).
  READ TABLE ls_email_templ-content INTO DATA(ls_content) WITH KEY langu = sy-langu.
  IF sy-subrc = 0.
    lv_subject_char255 = ls_content-subject.
    lv_notif_template  = ls_content-body_html.
    lv_subject_char50  = lv_subject_char255.

*Fill values for placeholders in the Email
    REPLACE ALL OCCURRENCES OF '%BP%'     IN lv_notif_template WITH '10001'.
    REPLACE ALL OCCURRENCES OF '%%%%%'    IN lv_notif_template WITH space.
    REPLACE ALL OCCURRENCES OF '%INVNO%'  IN lv_notif_template WITH '10000000001'.
    REPLACE ALL OCCURRENCES OF '%CURR%'   IN lv_notif_template WITH '100.00'.
    REPLACE ALL OCCURRENCES OF '%CRN%'    IN lv_notif_template WITH '2022222'.
    REPLACE ALL OCCURRENCES OF '%TOTAL%'  IN lv_notif_template WITH '500.00'.
    REPLACE ALL OCCURRENCES OF '%BILL%'   IN lv_notif_template WITH 'Aug-2024'.
    REPLACE ALL OCCURRENCES OF '%DATE%'   IN lv_notif_template WITH '31.08.2024'.
    REPLACE ALL OCCURRENCES OF '%BPNAME%' IN lv_notif_template WITH 'Test'.
  ENDIF.
  BREAK-POINT.
  cl_document_bcs=>string_to_soli( EXPORTING ip_string = lv_notif_template RECEIVING rt_soli = lt_body ).
*Add Email Content
  DATA(lv_obj_mime_h) = NEW cl_gbt_multirelated_service( ).
  CALL METHOD lv_obj_mime_h->set_main_html
    EXPORTING
      content = lt_body.
  lo_document = cl_document_bcs=>create_from_multirelated(
                                         i_subject          =  lv_subject_char50
                                         i_multirel_service =  lv_obj_mime_h ).

  BREAK-POINT.
*Add document to send request
  lo_send_request->set_document( lo_document ).
**********************************************************************
*Company Code Email-Id Hardcode
  TRY .
      CALL METHOD cl_cam_address_bcs=>create_internet_address
        EXPORTING
          i_address_string = 'test@gmail.com' "
          i_address_name   = 'SAP E-Invoice Team'
        RECEIVING
          result           = lo_sender.
    CATCH cx_address_bcs.
    CATCH cx_root.
  ENDTRY.
**********************************************************************
*Create the sender using the Sender User ID
*Set sender
  lo_send_request->set_sender( lo_sender ).

  BREAK-POINT.
  DATA(lo_recipient) = cl_cam_address_bcs=>create_internet_address(  'test@gmail.com'  ).

  lo_send_request->add_recipient( i_recipient =  lo_recipient ).

  lo_send_request->set_send_immediately( abap_true ).

  DATA(lv_sent_to_all) = lo_send_request->send( ).

  COMMIT WORK.
  IF lv_sent_to_all IS NOT INITIAL.
    MESSAGE s022(so).
  ENDIF.

  TRY.
    CATCH cx_bcs INTO DATA(lx_bcs_exception).
      MESSAGE i865(so) WITH lx_bcs_exception->error_type.
  ENDTRY.

  BREAK-POINT.